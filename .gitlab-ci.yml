variables:
    REPO_NAME: internal.kerygma.digital/kerygma-digital/biblebot/backend

stages:
    - build
    - push
    - test

build:dev:
    image: docker:20
    stage: build
    before_script:
        - echo -n $CI_JOB_TOKEN | docker login -u gitlab-ci-token --password-stdin $CI_REGISTRY
    script:
        - >
          docker build
          --cache-from $CI_REGISTRY_IMAGE:dev-latest
          --pull
          --file Dockerfile
          --tag $CI_REGISTRY_IMAGE:dev-latest
          .
        - docker push $CI_REGISTRY_IMAGE:dev-latest

build:prod:
    image: docker:20
    stage: build
    before_script:
        - echo -n $CI_JOB_TOKEN | docker login -u gitlab-ci-token --password-stdin $CI_REGISTRY
    script:
        - >
          docker build
          --cache-from $CI_REGISTRY_IMAGE:prod-latest
          --pull
          --file Dockerfile
          --build-arg DOMAIN=api.biblebot.xyz
          --tag $CI_REGISTRY_IMAGE:prod-latest
          .
        - docker push $CI_REGISTRY_IMAGE:prod-latest

push:dev:tag:
    needs: ["build:dev"]
    image: docker:20
    stage: push
    variables:
        GIT_STRATEGY: none
    only:
        - tags
    before_script:
        - echo -n $CI_JOB_TOKEN | docker login -u gitlab-ci-token --password-stdin $CI_REGISTRY
    script:
        - docker pull $CI_REGISTRY_IMAGE:dev-latest
        - docker tag $CI_REGISTRY_IMAGE:dev-latest $CI_REGISTRY_IMAGE:dev-$CI_COMMIT_REF_NAME
        - docker push $CI_REGISTRY_IMAGE:dev-$CI_COMMIT_REF_NAME

push:prod:tag:
    needs: ["build:prod"]
    image: docker:20
    stage: push
    variables:
        GIT_STRATEGY: none
    only:
        - tags
    before_script:
        - echo -n $CI_JOB_TOKEN | docker login -u gitlab-ci-token --password-stdin $CI_REGISTRY
    script:
        - docker pull $CI_REGISTRY_IMAGE:prod-latest
        - docker tag $CI_REGISTRY_IMAGE:prod-latest $CI_REGISTRY_IMAGE:prod-$CI_COMMIT_REF_NAME
        - docker push $CI_REGISTRY_IMAGE:prod-$CI_COMMIT_REF_NAME

test:
    image: golang:1.16
    stage: test
    script:
        - go fmt $(go list ./... | grep -v /vendor/)
        - go vet $(go list ./... | grep -v /vendor/)
        - go test -v $(go list ./... | grep -v /vendor/)
